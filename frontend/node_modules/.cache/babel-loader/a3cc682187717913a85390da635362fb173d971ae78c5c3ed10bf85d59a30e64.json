{"ast":null,"code":"var _jsxFileName = \"/home/durai/Documents/projects/TestPlatform/frontend/src/context/index.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useReducer, useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Material Dashboard 2 React main context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MaterialUI = /*#__PURE__*/createContext();\n\n// Setting custom name for the context which is visible on react dev tools\nMaterialUI.displayName = \"MaterialUIContext\";\n\n// Material Dashboard 2 React reducer\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"MINI_SIDENAV\":\n      {\n        return {\n          ...state,\n          miniSidenav: action.value\n        };\n      }\n    case \"TRANSPARENT_SIDENAV\":\n      {\n        return {\n          ...state,\n          transparentSidenav: action.value\n        };\n      }\n    case \"WHITE_SIDENAV\":\n      {\n        return {\n          ...state,\n          whiteSidenav: action.value\n        };\n      }\n    case \"SIDENAV_COLOR\":\n      {\n        return {\n          ...state,\n          sidenavColor: action.value\n        };\n      }\n    case \"TRANSPARENT_NAVBAR\":\n      {\n        return {\n          ...state,\n          transparentNavbar: action.value\n        };\n      }\n    case \"FIXED_NAVBAR\":\n      {\n        return {\n          ...state,\n          fixedNavbar: action.value\n        };\n      }\n    case \"OPEN_CONFIGURATOR\":\n      {\n        return {\n          ...state,\n          openConfigurator: action.value\n        };\n      }\n    case \"DIRECTION\":\n      {\n        return {\n          ...state,\n          direction: action.value\n        };\n      }\n    case \"LAYOUT\":\n      {\n        return {\n          ...state,\n          layout: action.value\n        };\n      }\n    case \"DARKMODE\":\n      {\n        return {\n          ...state,\n          darkMode: action.value\n        };\n      }\n    default:\n      {\n        throw new Error(`Unhandled action type: ${action.type}`);\n      }\n  }\n}\n\n// Material Dashboard 2 React context provider\nfunction MaterialUIControllerProvider({\n  children\n}) {\n  _s();\n  const initialState = {\n    miniSidenav: false,\n    transparentSidenav: false,\n    whiteSidenav: false,\n    sidenavColor: \"info\",\n    transparentNavbar: true,\n    fixedNavbar: true,\n    openConfigurator: false,\n    direction: \"ltr\",\n    layout: \"dashboard\",\n    darkMode: false\n  };\n  const [controller, dispatch] = useReducer(reducer, initialState);\n  const value = useMemo(() => [controller, dispatch], [controller, dispatch]);\n  return /*#__PURE__*/_jsxDEV(MaterialUI.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 10\n  }, this);\n}\n\n// Material Dashboard 2 React custom hook for using context\n_s(MaterialUIControllerProvider, \"81RFlW77D3yJWSxAra/wFN4HnBU=\");\n_c = MaterialUIControllerProvider;\nfunction useMaterialUIController() {\n  _s2();\n  const context = useContext(MaterialUI);\n  if (!context) {\n    throw new Error(\"useMaterialUIController should be used inside the MaterialUIControllerProvider.\");\n  }\n  return context;\n}\n\n// Typechecking props for the MaterialUIControllerProvider\n_s2(useMaterialUIController, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nMaterialUIControllerProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\n// Context module functions\nconst setMiniSidenav = (dispatch, value) => dispatch({\n  type: \"MINI_SIDENAV\",\n  value\n});\nconst setTransparentSidenav = (dispatch, value) => dispatch({\n  type: \"TRANSPARENT_SIDENAV\",\n  value\n});\nconst setWhiteSidenav = (dispatch, value) => dispatch({\n  type: \"WHITE_SIDENAV\",\n  value\n});\nconst setSidenavColor = (dispatch, value) => dispatch({\n  type: \"SIDENAV_COLOR\",\n  value\n});\nconst setTransparentNavbar = (dispatch, value) => dispatch({\n  type: \"TRANSPARENT_NAVBAR\",\n  value\n});\nconst setFixedNavbar = (dispatch, value) => dispatch({\n  type: \"FIXED_NAVBAR\",\n  value\n});\nconst setOpenConfigurator = (dispatch, value) => dispatch({\n  type: \"OPEN_CONFIGURATOR\",\n  value\n});\nconst setDirection = (dispatch, value) => dispatch({\n  type: \"DIRECTION\",\n  value\n});\nconst setLayout = (dispatch, value) => dispatch({\n  type: \"LAYOUT\",\n  value\n});\nconst setDarkMode = (dispatch, value) => dispatch({\n  type: \"DARKMODE\",\n  value\n});\nexport { MaterialUIControllerProvider, useMaterialUIController, setMiniSidenav, setTransparentSidenav, setWhiteSidenav, setSidenavColor, setTransparentNavbar, setFixedNavbar, setOpenConfigurator, setDirection, setLayout, setDarkMode };\nvar _c;\n$RefreshReg$(_c, \"MaterialUIControllerProvider\");","map":{"version":3,"names":["createContext","useContext","useReducer","useMemo","PropTypes","jsxDEV","_jsxDEV","MaterialUI","displayName","reducer","state","action","type","miniSidenav","value","transparentSidenav","whiteSidenav","sidenavColor","transparentNavbar","fixedNavbar","openConfigurator","direction","layout","darkMode","Error","MaterialUIControllerProvider","children","_s","initialState","controller","dispatch","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useMaterialUIController","_s2","context","propTypes","node","isRequired","setMiniSidenav","setTransparentSidenav","setWhiteSidenav","setSidenavColor","setTransparentNavbar","setFixedNavbar","setOpenConfigurator","setDirection","setLayout","setDarkMode","$RefreshReg$"],"sources":["/home/durai/Documents/projects/TestPlatform/frontend/src/context/index.js"],"sourcesContent":["\n\nimport { createContext, useContext, useReducer, useMemo } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\n// Material Dashboard 2 React main context\nconst MaterialUI = createContext();\n\n// Setting custom name for the context which is visible on react dev tools\nMaterialUI.displayName = \"MaterialUIContext\";\n\n// Material Dashboard 2 React reducer\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"MINI_SIDENAV\": {\n      return { ...state, miniSidenav: action.value };\n    }\n    case \"TRANSPARENT_SIDENAV\": {\n      return { ...state, transparentSidenav: action.value };\n    }\n    case \"WHITE_SIDENAV\": {\n      return { ...state, whiteSidenav: action.value };\n    }\n    case \"SIDENAV_COLOR\": {\n      return { ...state, sidenavColor: action.value };\n    }\n    case \"TRANSPARENT_NAVBAR\": {\n      return { ...state, transparentNavbar: action.value };\n    }\n    case \"FIXED_NAVBAR\": {\n      return { ...state, fixedNavbar: action.value };\n    }\n    case \"OPEN_CONFIGURATOR\": {\n      return { ...state, openConfigurator: action.value };\n    }\n    case \"DIRECTION\": {\n      return { ...state, direction: action.value };\n    }\n    case \"LAYOUT\": {\n      return { ...state, layout: action.value };\n    }\n    case \"DARKMODE\": {\n      return { ...state, darkMode: action.value };\n    }\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n\n// Material Dashboard 2 React context provider\nfunction MaterialUIControllerProvider({ children }) {\n  const initialState = {\n    miniSidenav: false,\n    transparentSidenav: false,\n    whiteSidenav: false,\n    sidenavColor: \"info\",\n    transparentNavbar: true,\n    fixedNavbar: true,\n    openConfigurator: false,\n    direction: \"ltr\",\n    layout: \"dashboard\",\n    darkMode: false,\n  };\n\n  const [controller, dispatch] = useReducer(reducer, initialState);\n\n  const value = useMemo(() => [controller, dispatch], [controller, dispatch]);\n\n  return <MaterialUI.Provider value={value}>{children}</MaterialUI.Provider>;\n}\n\n// Material Dashboard 2 React custom hook for using context\nfunction useMaterialUIController() {\n  const context = useContext(MaterialUI);\n\n  if (!context) {\n    throw new Error(\n      \"useMaterialUIController should be used inside the MaterialUIControllerProvider.\"\n    );\n  }\n\n  return context;\n}\n\n// Typechecking props for the MaterialUIControllerProvider\nMaterialUIControllerProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\n// Context module functions\nconst setMiniSidenav = (dispatch, value) => dispatch({ type: \"MINI_SIDENAV\", value });\nconst setTransparentSidenav = (dispatch, value) => dispatch({ type: \"TRANSPARENT_SIDENAV\", value });\nconst setWhiteSidenav = (dispatch, value) => dispatch({ type: \"WHITE_SIDENAV\", value });\nconst setSidenavColor = (dispatch, value) => dispatch({ type: \"SIDENAV_COLOR\", value });\nconst setTransparentNavbar = (dispatch, value) => dispatch({ type: \"TRANSPARENT_NAVBAR\", value });\nconst setFixedNavbar = (dispatch, value) => dispatch({ type: \"FIXED_NAVBAR\", value });\nconst setOpenConfigurator = (dispatch, value) => dispatch({ type: \"OPEN_CONFIGURATOR\", value });\nconst setDirection = (dispatch, value) => dispatch({ type: \"DIRECTION\", value });\nconst setLayout = (dispatch, value) => dispatch({ type: \"LAYOUT\", value });\nconst setDarkMode = (dispatch, value) => dispatch({ type: \"DARKMODE\", value });\n\nexport {\n  MaterialUIControllerProvider,\n  useMaterialUIController,\n  setMiniSidenav,\n  setTransparentSidenav,\n  setWhiteSidenav,\n  setSidenavColor,\n  setTransparentNavbar,\n  setFixedNavbar,\n  setOpenConfigurator,\n  setDirection,\n  setLayout,\n  setDarkMode,\n};\n"],"mappings":";;;AAEA,SAASA,aAAa,EAAEC,UAAU,EAAEC,UAAU,EAAEC,OAAO,QAAQ,OAAO;AAEtE,OAAOC,SAAS,MAAM,YAAY;;AAElC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,UAAU,gBAAGP,aAAa,CAAC,CAAC;;AAElC;AACAO,UAAU,CAACC,WAAW,GAAG,mBAAmB;;AAE5C;AACA,SAASC,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAE;EAC9B,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,cAAc;MAAE;QACnB,OAAO;UAAE,GAAGF,KAAK;UAAEG,WAAW,EAAEF,MAAM,CAACG;QAAM,CAAC;MAChD;IACA,KAAK,qBAAqB;MAAE;QAC1B,OAAO;UAAE,GAAGJ,KAAK;UAAEK,kBAAkB,EAAEJ,MAAM,CAACG;QAAM,CAAC;MACvD;IACA,KAAK,eAAe;MAAE;QACpB,OAAO;UAAE,GAAGJ,KAAK;UAAEM,YAAY,EAAEL,MAAM,CAACG;QAAM,CAAC;MACjD;IACA,KAAK,eAAe;MAAE;QACpB,OAAO;UAAE,GAAGJ,KAAK;UAAEO,YAAY,EAAEN,MAAM,CAACG;QAAM,CAAC;MACjD;IACA,KAAK,oBAAoB;MAAE;QACzB,OAAO;UAAE,GAAGJ,KAAK;UAAEQ,iBAAiB,EAAEP,MAAM,CAACG;QAAM,CAAC;MACtD;IACA,KAAK,cAAc;MAAE;QACnB,OAAO;UAAE,GAAGJ,KAAK;UAAES,WAAW,EAAER,MAAM,CAACG;QAAM,CAAC;MAChD;IACA,KAAK,mBAAmB;MAAE;QACxB,OAAO;UAAE,GAAGJ,KAAK;UAAEU,gBAAgB,EAAET,MAAM,CAACG;QAAM,CAAC;MACrD;IACA,KAAK,WAAW;MAAE;QAChB,OAAO;UAAE,GAAGJ,KAAK;UAAEW,SAAS,EAAEV,MAAM,CAACG;QAAM,CAAC;MAC9C;IACA,KAAK,QAAQ;MAAE;QACb,OAAO;UAAE,GAAGJ,KAAK;UAAEY,MAAM,EAAEX,MAAM,CAACG;QAAM,CAAC;MAC3C;IACA,KAAK,UAAU;MAAE;QACf,OAAO;UAAE,GAAGJ,KAAK;UAAEa,QAAQ,EAAEZ,MAAM,CAACG;QAAM,CAAC;MAC7C;IACA;MAAS;QACP,MAAM,IAAIU,KAAK,CAAE,0BAAyBb,MAAM,CAACC,IAAK,EAAC,CAAC;MAC1D;EACF;AACF;;AAEA;AACA,SAASa,4BAA4BA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAClD,MAAMC,YAAY,GAAG;IACnBf,WAAW,EAAE,KAAK;IAClBE,kBAAkB,EAAE,KAAK;IACzBC,YAAY,EAAE,KAAK;IACnBC,YAAY,EAAE,MAAM;IACpBC,iBAAiB,EAAE,IAAI;IACvBC,WAAW,EAAE,IAAI;IACjBC,gBAAgB,EAAE,KAAK;IACvBC,SAAS,EAAE,KAAK;IAChBC,MAAM,EAAE,WAAW;IACnBC,QAAQ,EAAE;EACZ,CAAC;EAED,MAAM,CAACM,UAAU,EAAEC,QAAQ,CAAC,GAAG5B,UAAU,CAACO,OAAO,EAAEmB,YAAY,CAAC;EAEhE,MAAMd,KAAK,GAAGX,OAAO,CAAC,MAAM,CAAC0B,UAAU,EAAEC,QAAQ,CAAC,EAAE,CAACD,UAAU,EAAEC,QAAQ,CAAC,CAAC;EAE3E,oBAAOxB,OAAA,CAACC,UAAU,CAACwB,QAAQ;IAACjB,KAAK,EAAEA,KAAM;IAAAY,QAAA,EAAEA;EAAQ;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAsB,CAAC;AAC5E;;AAEA;AAAAR,EAAA,CArBSF,4BAA4B;AAAAW,EAAA,GAA5BX,4BAA4B;AAsBrC,SAASY,uBAAuBA,CAAA,EAAG;EAAAC,GAAA;EACjC,MAAMC,OAAO,GAAGtC,UAAU,CAACM,UAAU,CAAC;EAEtC,IAAI,CAACgC,OAAO,EAAE;IACZ,MAAM,IAAIf,KAAK,CACb,iFACF,CAAC;EACH;EAEA,OAAOe,OAAO;AAChB;;AAEA;AAAAD,GAAA,CAZSD,uBAAuB;AAahCZ,4BAA4B,CAACe,SAAS,GAAG;EACvCd,QAAQ,EAAEtB,SAAS,CAACqC,IAAI,CAACC;AAC3B,CAAC;;AAED;AACA,MAAMC,cAAc,GAAGA,CAACb,QAAQ,EAAEhB,KAAK,KAAKgB,QAAQ,CAAC;EAAElB,IAAI,EAAE,cAAc;EAAEE;AAAM,CAAC,CAAC;AACrF,MAAM8B,qBAAqB,GAAGA,CAACd,QAAQ,EAAEhB,KAAK,KAAKgB,QAAQ,CAAC;EAAElB,IAAI,EAAE,qBAAqB;EAAEE;AAAM,CAAC,CAAC;AACnG,MAAM+B,eAAe,GAAGA,CAACf,QAAQ,EAAEhB,KAAK,KAAKgB,QAAQ,CAAC;EAAElB,IAAI,EAAE,eAAe;EAAEE;AAAM,CAAC,CAAC;AACvF,MAAMgC,eAAe,GAAGA,CAAChB,QAAQ,EAAEhB,KAAK,KAAKgB,QAAQ,CAAC;EAAElB,IAAI,EAAE,eAAe;EAAEE;AAAM,CAAC,CAAC;AACvF,MAAMiC,oBAAoB,GAAGA,CAACjB,QAAQ,EAAEhB,KAAK,KAAKgB,QAAQ,CAAC;EAAElB,IAAI,EAAE,oBAAoB;EAAEE;AAAM,CAAC,CAAC;AACjG,MAAMkC,cAAc,GAAGA,CAAClB,QAAQ,EAAEhB,KAAK,KAAKgB,QAAQ,CAAC;EAAElB,IAAI,EAAE,cAAc;EAAEE;AAAM,CAAC,CAAC;AACrF,MAAMmC,mBAAmB,GAAGA,CAACnB,QAAQ,EAAEhB,KAAK,KAAKgB,QAAQ,CAAC;EAAElB,IAAI,EAAE,mBAAmB;EAAEE;AAAM,CAAC,CAAC;AAC/F,MAAMoC,YAAY,GAAGA,CAACpB,QAAQ,EAAEhB,KAAK,KAAKgB,QAAQ,CAAC;EAAElB,IAAI,EAAE,WAAW;EAAEE;AAAM,CAAC,CAAC;AAChF,MAAMqC,SAAS,GAAGA,CAACrB,QAAQ,EAAEhB,KAAK,KAAKgB,QAAQ,CAAC;EAAElB,IAAI,EAAE,QAAQ;EAAEE;AAAM,CAAC,CAAC;AAC1E,MAAMsC,WAAW,GAAGA,CAACtB,QAAQ,EAAEhB,KAAK,KAAKgB,QAAQ,CAAC;EAAElB,IAAI,EAAE,UAAU;EAAEE;AAAM,CAAC,CAAC;AAE9E,SACEW,4BAA4B,EAC5BY,uBAAuB,EACvBM,cAAc,EACdC,qBAAqB,EACrBC,eAAe,EACfC,eAAe,EACfC,oBAAoB,EACpBC,cAAc,EACdC,mBAAmB,EACnBC,YAAY,EACZC,SAAS,EACTC,WAAW;AACX,IAAAhB,EAAA;AAAAiB,YAAA,CAAAjB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}