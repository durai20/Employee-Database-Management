{"ast":null,"code":"var _jsxFileName = \"/home/durai/Documents/projects/TestPlatform/frontend/src/layouts/dashboard/index.js\",\n  _s = $RefreshSig$();\nimport Grid from \"@mui/material/Grid\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\n\n// Material Dashboard 2 React example components\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\nimport Footer from \"examples/Footer\";\nimport ComplexStatisticsCard from \"examples/Cards/StatisticsCards/ComplexStatisticsCard\";\nimport React, { useState, useEffect } from \"react\";\n// Dashboard components\n\nimport { useSession } from \" SessionContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const {\n    name,\n    pass\n  } = useSession();\n  const [totalEmployeeCount, setTotalEmployeeCount] = useState(0);\n  const [totalEmployeeCseCount, setTotalEmployeeCseCount] = useState(0);\n  const [totalEmployeeItCount, setTotalEmployeeItCount] = useState(0);\n  const [totalEmployeeEceCount, setTotalEmployeeEceCount] = useState(0);\n  const [totalEmployeeHrCount, setTotalEmployeeHrCount] = useState(0);\n  const [totalEmployeeEeeCount, setTotalEmployeeEeeCount] = useState(0);\n  const [totalEmployeeCivilCount, setTotalEmployeeCivilCount] = useState(0);\n  const [totalEmployeeMechanicalCount, setTotalEmployeeMechanicalCount] = useState(0);\n  const [totalEmployeeAdmissionCount, setTotalEmployeeAdmissionCount] = useState(0);\n  const [totalEmployeePlacementCount, setTotalEmployeePlacementCount] = useState(0);\n  const [totalEmployeeFreshersCount, setTotalEmployeeFreshersCount] = useState(0);\n  const fetchTotalEmployeeCount = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5001/totalEmployeeCount\");\n      const result = await response.json();\n      if (result && result.length > 0) {\n        const totalEmployeeCount = result[0].totalEmployeeCount;\n        setTotalEmployeeCount(totalEmployeeCount);\n      } else {\n        console.error(\"Invalid data structure received from the server:\", result);\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  const fetchTotalEmployeeCseCount = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5001/totalEmployeeCseCount\");\n      const result = await response.json();\n      if (result && result.length > 0) {\n        const totalEmployeeCseCount = result[0].totalEmployeeCseCount;\n        setTotalEmployeeCseCount(totalEmployeeCseCount);\n      } else {\n        console.error(\"Invalid data structure received from the server:\", result);\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  const fetchTotalEmployeeEceCount = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5001/totalEmployeeEceCount\");\n      const result = await response.json();\n      if (result && result.length > 0) {\n        const totalEmployeeEceCount = result[0].totalEmployeeEceCount;\n        setTotalEmployeeEceCount(totalEmployeeEceCount);\n      } else {\n        console.error(\"Invalid data structure received from the server:\", result);\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  const fetchTotalEmployeeEeeCount = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5001/totalEmployeeEeeCount\");\n      const result = await response.json();\n      if (result && result.length > 0) {\n        const totalEmployeeEeeCount = result[0].totalEmployeeEeeCount;\n        setTotalEmployeeEeeCount(totalEmployeeEeeCount);\n      } else {\n        console.error(\"Invalid data structure received from the server:\", result);\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  const fetchTotalEmployeeItCount = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5001/totalEmployeeItCount\");\n      const result = await response.json();\n      if (result && result.length > 0) {\n        const totalEmployeeItCount = result[0].totalEmployeeItCount;\n        setTotalEmployeeItCount(totalEmployeeItCount);\n      } else {\n        console.error(\"Invalid data structure received from the server:\", result);\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  const fetchTotalEmployeeCivilCount = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5001/totalEmployeeCivilCount\");\n      const result = await response.json();\n      if (result && result.length > 0) {\n        const totalEmployeeCivilCount = result[0].totalEmployeeCivilCount;\n        setTotalEmployeeCivilCount(totalEmployeeCivilCount);\n      } else {\n        console.error(\"Invalid data structure received from the server:\", result);\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  const fetchTotalEmployeeHrCount = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5001/totalEmployeeHrCount\");\n      const result = await response.json();\n      if (result && result.length > 0) {\n        const totalEmployeeHrCount = result[0].totalEmployeeHrCount;\n        setTotalEmployeeHrCount(totalEmployeeHrCount);\n      } else {\n        console.error(\"Invalid data structure received from the server:\", result);\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  const fetchTotalEmployeeAdmissionCount = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5001/totalEmployeeAdmissionCount\");\n      const result = await response.json();\n      if (result && result.length > 0) {\n        const totalEmployeeAdmissionCount = result[0].totalEmployeeAdmissionCount;\n        setTotalEmployeeAdmissionCount(totalEmployeeAdmissionCount);\n      } else {\n        console.error(\"Invalid data structure received from the server:\", result);\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  const fetchTotalEmployeeFreshersCount = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5001/totalEmployeeFreshersCount\");\n      const result = await response.json();\n      if (result && result.length > 0) {\n        const totalEmployeeFreshersCount = result[0].totalEmployeeFreshersCount;\n        setTotalEmployeeFreshersCount(totalEmployeeFreshersCount);\n      } else {\n        console.error(\"Invalid data structure received from the server:\", result);\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  const fetchTotalEmployeeMechanicalCount = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5001/totalEmployeeMechanicalCount\");\n      const result = await response.json();\n      if (result && result.length > 0) {\n        const totalEmployeeMechanicalCount = result[0].totalEmployeeMechanicalCount;\n        setTotalEmployeeMechanicalCount(totalEmployeeMechanicalCount);\n      } else {\n        console.error(\"Invalid data structure received from the server:\", result);\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  const fetchTotalEmployeePlacementCount = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5001/totalEmployeePlacementCount\");\n      const result = await response.json();\n      if (result && result.length > 0) {\n        const totalEmployeePlacementCount = result[0].totalEmployeePlacementCount;\n        setTotalEmployeePlacementCount(totalEmployeePlacementCount);\n      } else {\n        console.error(\"Invalid data structure received from the server:\", result);\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchTotalEmployeeCseCount();\n    fetchTotalEmployeeCivilCount();\n    fetchTotalEmployeeEceCount();\n    fetchTotalEmployeeItCount();\n    fetchTotalEmployeeMechanicalCount();\n    fetchTotalEmployeeFreshersCount();\n    fetchTotalEmployeeAdmissionCount();\n    fetchTotalEmployeeEeeCount();\n    fetchTotalEmployeePlacementCount();\n    fetchTotalEmployeeHrCount();\n    fetchTotalEmployeeCount();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    children: [/*#__PURE__*/_jsxDEV(MDBox, {\n      py: 3,\n      children: [console.log(name, pass), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          lg: 3,\n          children: /*#__PURE__*/_jsxDEV(MDBox, {\n            mb: 1.5,\n            children: /*#__PURE__*/_jsxDEV(ComplexStatisticsCard, {\n              color: \"dark\",\n              icon: \"weekend\",\n              title: \"Total Employee\",\n              count: totalEmployeeCount,\n              percentage: {\n                color: \"success\",\n                amount: \"\",\n                label: \"Just updated\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          lg: 3,\n          children: /*#__PURE__*/_jsxDEV(MDBox, {\n            mb: 1.5,\n            children: /*#__PURE__*/_jsxDEV(ComplexStatisticsCard, {\n              icon: \"engineering\",\n              title: \"Total Department\",\n              count: \"9\",\n              percentage: {\n                color: \"success\",\n                amount: \"\",\n                label: \"Just updated\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          lg: 3,\n          children: /*#__PURE__*/_jsxDEV(MDBox, {\n            mb: 1.5,\n            children: /*#__PURE__*/_jsxDEV(ComplexStatisticsCard, {\n              color: \"success\",\n              icon: \"store\",\n              title: \"HR Department\",\n              count: totalEmployeeHrCount,\n              percentage: {\n                color: \"success\",\n                amount: \"\",\n                label: \"Just updated\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          lg: 3,\n          children: /*#__PURE__*/_jsxDEV(MDBox, {\n            mb: 1.5,\n            children: /*#__PURE__*/_jsxDEV(ComplexStatisticsCard, {\n              color: \"secondary\",\n              icon: \"computer\",\n              title: \"CSE Department\",\n              count: totalEmployeeCseCount,\n              percentage: {\n                color: \"success\",\n                amount: \"\",\n                label: \"Just updated\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          lg: 3,\n          children: /*#__PURE__*/_jsxDEV(MDBox, {\n            mb: 1.5,\n            children: /*#__PURE__*/_jsxDEV(ComplexStatisticsCard, {\n              color: \"light\",\n              icon: \"home\",\n              title: \"CIVIL Depatement\",\n              count: totalEmployeeCivilCount,\n              percentage: {\n                color: \"success\",\n                amount: \"\",\n                label: \"Just updated\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          lg: 3,\n          children: /*#__PURE__*/_jsxDEV(MDBox, {\n            mb: 1.5,\n            children: /*#__PURE__*/_jsxDEV(ComplexStatisticsCard, {\n              color: \"error\",\n              icon: \"usb\",\n              title: \"ECE Department\",\n              count: totalEmployeeEceCount,\n              percentage: {\n                color: \"success\",\n                amount: \"\",\n                label: \"Just updated\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          lg: 3,\n          children: /*#__PURE__*/_jsxDEV(MDBox, {\n            mb: 1.5,\n            children: /*#__PURE__*/_jsxDEV(ComplexStatisticsCard, {\n              color: \"dark\",\n              icon: \"electrical_services\",\n              title: \"EEE Department\",\n              count: totalEmployeeEeeCount,\n              percentage: {\n                color: \"success\",\n                amount: \"\",\n                label: \"Just updated\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          lg: 3,\n          children: /*#__PURE__*/_jsxDEV(MDBox, {\n            mb: 1.5,\n            children: /*#__PURE__*/_jsxDEV(ComplexStatisticsCard, {\n              color: \"warning\",\n              icon: \"handyman\",\n              title: \"Mechanical Department\",\n              count: totalEmployeeMechanicalCount,\n              percentage: {\n                color: \"success\",\n                amount: \"\",\n                label: \"Just updated\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          lg: 3,\n          children: /*#__PURE__*/_jsxDEV(MDBox, {\n            mb: 1.5,\n            children: /*#__PURE__*/_jsxDEV(ComplexStatisticsCard, {\n              color: \"info\",\n              icon: \"person_4\",\n              title: \"Freshers Department\",\n              count: totalEmployeeFreshersCount,\n              percentage: {\n                color: \"success\",\n                amount: \"\",\n                label: \"Just updated\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          lg: 3,\n          children: /*#__PURE__*/_jsxDEV(MDBox, {\n            mb: 1.5,\n            children: /*#__PURE__*/_jsxDEV(ComplexStatisticsCard, {\n              color: \"info\",\n              icon: \"mouse\",\n              title: \"IT Department\",\n              count: to,\n              percentage: {\n                color: \"success\",\n                amount: \"\",\n                label: \"Just updated\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          lg: 3,\n          children: /*#__PURE__*/_jsxDEV(MDBox, {\n            mb: 1.5,\n            children: /*#__PURE__*/_jsxDEV(ComplexStatisticsCard, {\n              color: \"success\",\n              icon: \"work\",\n              title: \"Placement Department\",\n              count: \"10\",\n              percentage: {\n                color: \"success\",\n                amount: \"\",\n                label: \"Just updated\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          lg: 3,\n          children: /*#__PURE__*/_jsxDEV(MDBox, {\n            mb: 1.5,\n            children: /*#__PURE__*/_jsxDEV(ComplexStatisticsCard, {\n              color: \"success\",\n              icon: \"admin_panel_settings\",\n              title: \"Admission Office\",\n              count: \"10\",\n              percentage: {\n                color: \"success\",\n                amount: \"\",\n                label: \"Just updated\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"e0/vmg0M4+6SMcZY/gRaKM9IHhs=\", false, function () {\n  return [useSession];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["Grid","MDBox","DashboardLayout","Footer","ComplexStatisticsCard","React","useState","useEffect","useSession","jsxDEV","_jsxDEV","Dashboard","_s","name","pass","totalEmployeeCount","setTotalEmployeeCount","totalEmployeeCseCount","setTotalEmployeeCseCount","totalEmployeeItCount","setTotalEmployeeItCount","totalEmployeeEceCount","setTotalEmployeeEceCount","totalEmployeeHrCount","setTotalEmployeeHrCount","totalEmployeeEeeCount","setTotalEmployeeEeeCount","totalEmployeeCivilCount","setTotalEmployeeCivilCount","totalEmployeeMechanicalCount","setTotalEmployeeMechanicalCount","totalEmployeeAdmissionCount","setTotalEmployeeAdmissionCount","totalEmployeePlacementCount","setTotalEmployeePlacementCount","totalEmployeeFreshersCount","setTotalEmployeeFreshersCount","fetchTotalEmployeeCount","response","fetch","result","json","length","console","error","fetchTotalEmployeeCseCount","fetchTotalEmployeeEceCount","fetchTotalEmployeeEeeCount","fetchTotalEmployeeItCount","fetchTotalEmployeeCivilCount","fetchTotalEmployeeHrCount","fetchTotalEmployeeAdmissionCount","fetchTotalEmployeeFreshersCount","fetchTotalEmployeeMechanicalCount","fetchTotalEmployeePlacementCount","children","py","log","container","spacing","item","xs","md","lg","mb","color","icon","title","count","percentage","amount","label","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["/home/durai/Documents/projects/TestPlatform/frontend/src/layouts/dashboard/index.js"],"sourcesContent":["import Grid from \"@mui/material/Grid\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\n\n// Material Dashboard 2 React example components\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\n\nimport Footer from \"examples/Footer\";\n\nimport ComplexStatisticsCard from \"examples/Cards/StatisticsCards/ComplexStatisticsCard\";\n\nimport React, { useState, useEffect } from \"react\";\n// Dashboard components\n\nimport { useSession } from \" SessionContext\";\n\nfunction Dashboard() {\n  const {name,pass}=useSession();\n  const [totalEmployeeCount, setTotalEmployeeCount] = useState(0);\n  const [totalEmployeeCseCount, setTotalEmployeeCseCount] = useState(0);\n  const [totalEmployeeItCount, setTotalEmployeeItCount] = useState(0);\n  const [totalEmployeeEceCount, setTotalEmployeeEceCount] = useState(0);\n  const [totalEmployeeHrCount, setTotalEmployeeHrCount] = useState(0);\n  const [totalEmployeeEeeCount, setTotalEmployeeEeeCount] = useState(0);\n  const [totalEmployeeCivilCount, setTotalEmployeeCivilCount] = useState(0);\n  const [totalEmployeeMechanicalCount, setTotalEmployeeMechanicalCount] = useState(0);\n  const [totalEmployeeAdmissionCount, setTotalEmployeeAdmissionCount] = useState(0);\n  const [totalEmployeePlacementCount, setTotalEmployeePlacementCount] = useState(0);\n  const [totalEmployeeFreshersCount, setTotalEmployeeFreshersCount] = useState(0);\n\n\n  const fetchTotalEmployeeCount = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5001/totalEmployeeCount\");\n      const result = await response.json();\n\n      if (result && result.length > 0) {\n        const totalEmployeeCount = result[0].totalEmployeeCount;\n        setTotalEmployeeCount(totalEmployeeCount);\n      } else {\n        console.error(\"Invalid data structure received from the server:\", result);\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  const fetchTotalEmployeeCseCount = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5001/totalEmployeeCseCount\");\n      const result = await response.json();\n\n      if (result && result.length > 0) {\n        const totalEmployeeCseCount = result[0].totalEmployeeCseCount;\n        setTotalEmployeeCseCount(totalEmployeeCseCount);\n      } else {\n        console.error(\"Invalid data structure received from the server:\", result);\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  }; \n\n  const fetchTotalEmployeeEceCount = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5001/totalEmployeeEceCount\");\n      const result = await response.json();\n\n      if (result && result.length > 0) {\n        const totalEmployeeEceCount = result[0].totalEmployeeEceCount;\n        setTotalEmployeeEceCount(totalEmployeeEceCount);\n      } else {\n        console.error(\"Invalid data structure received from the server:\", result);\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  const fetchTotalEmployeeEeeCount = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5001/totalEmployeeEeeCount\");\n      const result = await response.json();\n\n      if (result && result.length > 0) {\n        const totalEmployeeEeeCount = result[0].totalEmployeeEeeCount;\n        setTotalEmployeeEeeCount(totalEmployeeEeeCount);\n      } else {\n        console.error(\"Invalid data structure received from the server:\", result);\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n\n  const fetchTotalEmployeeItCount = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5001/totalEmployeeItCount\");\n      const result = await response.json();\n\n      if (result && result.length > 0) {\n        const totalEmployeeItCount = result[0].totalEmployeeItCount;\n        setTotalEmployeeItCount(totalEmployeeItCount);\n      } else {\n        console.error(\"Invalid data structure received from the server:\", result);\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  const fetchTotalEmployeeCivilCount = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5001/totalEmployeeCivilCount\");\n      const result = await response.json();\n\n      if (result && result.length > 0) {\n        const totalEmployeeCivilCount = result[0].totalEmployeeCivilCount;\n        setTotalEmployeeCivilCount(totalEmployeeCivilCount);\n      } else {\n        console.error(\"Invalid data structure received from the server:\", result);\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  const fetchTotalEmployeeHrCount = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5001/totalEmployeeHrCount\");\n      const result = await response.json();\n\n      if (result && result.length > 0) {\n        const totalEmployeeHrCount = result[0].totalEmployeeHrCount;\n        setTotalEmployeeHrCount(totalEmployeeHrCount);\n      } else {\n        console.error(\"Invalid data structure received from the server:\", result);\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  const fetchTotalEmployeeAdmissionCount = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5001/totalEmployeeAdmissionCount\");\n      const result = await response.json();\n\n      if (result && result.length > 0) {\n        const totalEmployeeAdmissionCount = result[0].totalEmployeeAdmissionCount;\n        setTotalEmployeeAdmissionCount(totalEmployeeAdmissionCount);\n      }  \n      else {\n        console.error(\"Invalid data structure received from the server:\", result);\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n      const fetchTotalEmployeeFreshersCount = async () => {\n        try {\n          const response = await fetch(\"http://localhost:5001/totalEmployeeFreshersCount\");\n          const result = await response.json();\n    \n          if (result && result.length > 0) {\n            const totalEmployeeFreshersCount = result[0].totalEmployeeFreshersCount;\n            setTotalEmployeeFreshersCount(totalEmployeeFreshersCount);\n          } else {\n            console.error(\"Invalid data structure received from the server:\", result);\n          }\n        } catch (error) {\n          console.error(\"Error fetching data:\", error);\n        }\n      };\n      const fetchTotalEmployeeMechanicalCount = async () => {\n        try {\n          const response = await fetch(\"http://localhost:5001/totalEmployeeMechanicalCount\");\n          const result = await response.json();\n    \n          if (result && result.length > 0) {\n            const totalEmployeeMechanicalCount = result[0].totalEmployeeMechanicalCount;\n            setTotalEmployeeMechanicalCount(totalEmployeeMechanicalCount);\n          } else {\n            console.error(\"Invalid data structure received from the server:\", result);\n          }\n        } catch (error) {\n          console.error(\"Error fetching data:\", error);\n        }\n      };\n      const fetchTotalEmployeePlacementCount = async () => {\n        try {\n          const response = await fetch(\"http://localhost:5001/totalEmployeePlacementCount\");\n          const result = await response.json();\n    \n          if (result && result.length > 0) {\n            const totalEmployeePlacementCount = result[0].totalEmployeePlacementCount;\n            setTotalEmployeePlacementCount(totalEmployeePlacementCount);\n          } else {\n            console.error(\"Invalid data structure received from the server:\", result);\n          }\n        } catch (error) {\n          console.error(\"Error fetching data:\", error);\n        }\n      };\n\n  useEffect(() => {\n    fetchTotalEmployeeCseCount();\n    fetchTotalEmployeeCivilCount();\n    fetchTotalEmployeeEceCount();\n    fetchTotalEmployeeItCount();\n    fetchTotalEmployeeMechanicalCount();\n    fetchTotalEmployeeFreshersCount();\n    fetchTotalEmployeeAdmissionCount();\n    fetchTotalEmployeeEeeCount();\n    fetchTotalEmployeePlacementCount();\n    fetchTotalEmployeeHrCount();\n    fetchTotalEmployeeCount();\n  }, []);\n \n\n  return (\n    <DashboardLayout>\n      <MDBox py={3}>\n        {console.log(name,pass)}\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={6} lg={3}>\n            <MDBox mb={1.5}>\n              <ComplexStatisticsCard\n                color=\"dark\"\n                icon=\"weekend\"\n                title=\"Total Employee\"\n                count={totalEmployeeCount}\n                percentage={{\n                  color: \"success\",\n                  amount: \"\",\n                  label: \"Just updated\",\n                }}\n              />\n            </MDBox>\n          </Grid>\n          <Grid item xs={12} md={6} lg={3}>\n            <MDBox mb={1.5}>\n              <ComplexStatisticsCard\n                icon=\"engineering\"\n                title=\"Total Department\"\n                count=\"9\"\n                percentage={{\n                  color: \"success\",\n                  amount: \"\",\n                  label: \"Just updated\",\n                }}\n              />\n            </MDBox>\n          </Grid>\n          <Grid item xs={12} md={6} lg={3}>\n            <MDBox mb={1.5}>\n              <ComplexStatisticsCard\n                color=\"success\"\n                icon=\"store\"\n                title=\"HR Department\"\n                count={totalEmployeeHrCount}\n                percentage={{\n                  color: \"success\",\n                  amount: \"\",\n                  label: \"Just updated\",\n                }}\n              />\n            </MDBox>\n          </Grid>\n          <Grid item xs={12} md={6} lg={3}>\n            <MDBox mb={1.5}>\n              <ComplexStatisticsCard\n                color=\"secondary\"\n                icon=\"computer\" \n                title=\"CSE Department\"\n                count={totalEmployeeCseCount}\n                percentage={{\n                  color: \"success\",\n                  amount: \"\",\n                  label: \"Just updated\",\n                }}\n              />\n            </MDBox>\n          </Grid>\n          <Grid item xs={12} md={6} lg={3}>\n            <MDBox mb={1.5}>\n              <ComplexStatisticsCard\n                color=\"light\"\n                icon=\"home\" \n                title=\"CIVIL Depatement\"\n                count={totalEmployeeCivilCount}\n                percentage={{\n                  color: \"success\",\n                  amount: \"\",\n                  label: \"Just updated\",\n                }}\n              />\n            </MDBox>\n          </Grid>\n          <Grid item xs={12} md={6} lg={3}>\n            <MDBox mb={1.5}>\n              <ComplexStatisticsCard\n                color=\"error\"\n                icon=\"usb\" \n                title=\"ECE Department\"\n                count={totalEmployeeEceCount}\n                percentage={{\n                  color: \"success\",\n                  amount: \"\",\n                  label: \"Just updated\",\n                }}\n              />\n            </MDBox>\n          </Grid>\n          <Grid item xs={12} md={6} lg={3}>\n            <MDBox mb={1.5}>\n              <ComplexStatisticsCard\n                color=\"dark\"\n                icon=\"electrical_services\" \n                title=\"EEE Department\"\n                count={totalEmployeeEeeCount}\n                percentage={{\n                  color: \"success\",\n                  amount: \"\",\n                  label: \"Just updated\",\n                }}\n              />\n            </MDBox>\n          </Grid>\n          <Grid item xs={12} md={6} lg={3}>\n            <MDBox mb={1.5}>\n              <ComplexStatisticsCard\n                color=\"warning\"\n                icon=\"handyman\" \n                title=\"Mechanical Department\"\n                count={totalEmployeeMechanicalCount}\n                percentage={{\n                  color: \"success\",\n                  amount: \"\",\n                  label: \"Just updated\",\n                }}\n              />\n            </MDBox>\n          </Grid>\n          <Grid item xs={12} md={6} lg={3}>\n            <MDBox mb={1.5}>\n              <ComplexStatisticsCard\n                color=\"info\"\n                icon=\"person_4\" \n                title=\"Freshers Department\"\n                count={totalEmployeeFreshersCount}\n                percentage={{\n                  color: \"success\",\n                  amount: \"\",\n                  label: \"Just updated\",\n                }}\n              />\n            </MDBox>\n          </Grid>\n          <Grid item xs={12} md={6} lg={3}>\n            <MDBox mb={1.5}>\n              <ComplexStatisticsCard\n                color=\"info\"\n                icon=\"mouse\" \n                title=\"IT Department\"\n                count={to}\n                percentage={{\n                  color: \"success\",\n                  amount: \"\",\n                  label: \"Just updated\",\n                }}\n              />\n            </MDBox>\n          </Grid>\n          <Grid item xs={12} md={6} lg={3}>\n            <MDBox mb={1.5}>\n              <ComplexStatisticsCard\n                color=\"success\"\n                icon=\"work\" \n                title=\"Placement Department\"\n                count=\"10\"\n                percentage={{\n                  color: \"success\",\n                  amount: \"\",\n                  label: \"Just updated\",\n                }}\n              />\n            </MDBox>\n          </Grid>\n          <Grid item xs={12} md={6} lg={3}>\n            <MDBox mb={1.5}>\n              <ComplexStatisticsCard\n                color=\"success\"\n                icon=\"admin_panel_settings\" \n                title=\"Admission Office\"\n                count=\"10\"\n                percentage={{\n                  color: \"success\",\n                  amount: \"\",\n                  label: \"Just updated\",\n                }}\n              />\n            </MDBox>\n          </Grid>\n         \n        </Grid>\n       </MDBox>\n      <Footer />\n    </DashboardLayout>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}