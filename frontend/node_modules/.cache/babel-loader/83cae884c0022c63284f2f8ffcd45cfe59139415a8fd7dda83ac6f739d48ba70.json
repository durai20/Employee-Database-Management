{"ast":null,"code":"import Typography from \"@mui/material/Typography\";\nimport { styled } from \"@mui/material/styles\";\nexport default styled(Typography)(({\n  theme,\n  ownerState\n}) => {\n  const {\n    palette,\n    typography,\n    functions\n  } = theme;\n  const {\n    color,\n    textTransform,\n    verticalAlign,\n    fontWeight,\n    opacity,\n    textGradient,\n    darkMode\n  } = ownerState;\n  const {\n    gradients,\n    transparent,\n    white\n  } = palette;\n  const {\n    fontWeightLight,\n    fontWeightRegular,\n    fontWeightMedium,\n    fontWeightBold\n  } = typography;\n  const {\n    linearGradient\n  } = functions;\n\n  // fontWeight styles\n  const fontWeights = {\n    light: fontWeightLight,\n    regular: fontWeightRegular,\n    medium: fontWeightMedium,\n    bold: fontWeightBold\n  };\n\n  // styles for the typography with textGradient={true}\n  const gradientStyles = () => ({\n    backgroundImage: color !== \"inherit\" && color !== \"text\" && color !== \"white\" && gradients[color] ? linearGradient(gradients[color].main, gradients[color].state) : linearGradient(gradients.dark.main, gradients.dark.state),\n    display: \"inline-block\",\n    WebkitBackgroundClip: \"text\",\n    WebkitTextFillColor: transparent.main,\n    position: \"relative\",\n    zIndex: 1\n  });\n\n  // color value\n  let colorValue = color === \"inherit\" || !palette[color] ? \"inherit\" : palette[color].main;\n  if (darkMode && (color === \"inherit\" || !palette[color])) {\n    colorValue = \"inherit\";\n  } else if (darkMode && color === \"dark\") colorValue = white.main;\n  return {\n    opacity,\n    textTransform,\n    verticalAlign,\n    textDecoration: \"none\",\n    color: colorValue,\n    fontWeight: fontWeights[fontWeight] && fontWeights[fontWeight],\n    ...(textGradient && gradientStyles())\n  };\n});","map":{"version":3,"names":["Typography","styled","theme","ownerState","palette","typography","functions","color","textTransform","verticalAlign","fontWeight","opacity","textGradient","darkMode","gradients","transparent","white","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","linearGradient","fontWeights","light","regular","medium","bold","gradientStyles","backgroundImage","main","state","dark","display","WebkitBackgroundClip","WebkitTextFillColor","position","zIndex","colorValue","textDecoration"],"sources":["/home/durai/Documents/projects/TestPlatform/frontend/src/components/MDTypography/MDTypographyRoot.js"],"sourcesContent":["import Typography from \"@mui/material/Typography\";\nimport { styled } from \"@mui/material/styles\";\n\nexport default styled(Typography)(({ theme, ownerState }) => {\n  const { palette, typography, functions } = theme;\n  const { color, textTransform, verticalAlign, fontWeight, opacity, textGradient, darkMode } =\n    ownerState;\n\n  const { gradients, transparent, white } = palette;\n  const { fontWeightLight, fontWeightRegular, fontWeightMedium, fontWeightBold } = typography;\n  const { linearGradient } = functions;\n\n  // fontWeight styles\n  const fontWeights = {\n    light: fontWeightLight,\n    regular: fontWeightRegular,\n    medium: fontWeightMedium,\n    bold: fontWeightBold,\n  };\n\n  // styles for the typography with textGradient={true}\n  const gradientStyles = () => ({\n    backgroundImage:\n      color !== \"inherit\" && color !== \"text\" && color !== \"white\" && gradients[color]\n        ? linearGradient(gradients[color].main, gradients[color].state)\n        : linearGradient(gradients.dark.main, gradients.dark.state),\n    display: \"inline-block\",\n    WebkitBackgroundClip: \"text\",\n    WebkitTextFillColor: transparent.main,\n    position: \"relative\",\n    zIndex: 1,\n  });\n\n  // color value\n  let colorValue = color === \"inherit\" || !palette[color] ? \"inherit\" : palette[color].main;\n\n  if (darkMode && (color === \"inherit\" || !palette[color])) {\n    colorValue = \"inherit\";\n  } else if (darkMode && color === \"dark\") colorValue = white.main;\n\n  return {\n    opacity,\n    textTransform,\n    verticalAlign,\n    textDecoration: \"none\",\n    color: colorValue,\n    fontWeight: fontWeights[fontWeight] && fontWeights[fontWeight],\n    ...(textGradient && gradientStyles()),\n  };\n});\n"],"mappings":"AAAA,OAAOA,UAAU,MAAM,0BAA0B;AACjD,SAASC,MAAM,QAAQ,sBAAsB;AAE7C,eAAeA,MAAM,CAACD,UAAU,CAAC,CAAC,CAAC;EAAEE,KAAK;EAAEC;AAAW,CAAC,KAAK;EAC3D,MAAM;IAAEC,OAAO;IAAEC,UAAU;IAAEC;EAAU,CAAC,GAAGJ,KAAK;EAChD,MAAM;IAAEK,KAAK;IAAEC,aAAa;IAAEC,aAAa;IAAEC,UAAU;IAAEC,OAAO;IAAEC,YAAY;IAAEC;EAAS,CAAC,GACxFV,UAAU;EAEZ,MAAM;IAAEW,SAAS;IAAEC,WAAW;IAAEC;EAAM,CAAC,GAAGZ,OAAO;EACjD,MAAM;IAAEa,eAAe;IAAEC,iBAAiB;IAAEC,gBAAgB;IAAEC;EAAe,CAAC,GAAGf,UAAU;EAC3F,MAAM;IAAEgB;EAAe,CAAC,GAAGf,SAAS;;EAEpC;EACA,MAAMgB,WAAW,GAAG;IAClBC,KAAK,EAAEN,eAAe;IACtBO,OAAO,EAAEN,iBAAiB;IAC1BO,MAAM,EAAEN,gBAAgB;IACxBO,IAAI,EAAEN;EACR,CAAC;;EAED;EACA,MAAMO,cAAc,GAAGA,CAAA,MAAO;IAC5BC,eAAe,EACbrB,KAAK,KAAK,SAAS,IAAIA,KAAK,KAAK,MAAM,IAAIA,KAAK,KAAK,OAAO,IAAIO,SAAS,CAACP,KAAK,CAAC,GAC5Ec,cAAc,CAACP,SAAS,CAACP,KAAK,CAAC,CAACsB,IAAI,EAAEf,SAAS,CAACP,KAAK,CAAC,CAACuB,KAAK,CAAC,GAC7DT,cAAc,CAACP,SAAS,CAACiB,IAAI,CAACF,IAAI,EAAEf,SAAS,CAACiB,IAAI,CAACD,KAAK,CAAC;IAC/DE,OAAO,EAAE,cAAc;IACvBC,oBAAoB,EAAE,MAAM;IAC5BC,mBAAmB,EAAEnB,WAAW,CAACc,IAAI;IACrCM,QAAQ,EAAE,UAAU;IACpBC,MAAM,EAAE;EACV,CAAC,CAAC;;EAEF;EACA,IAAIC,UAAU,GAAG9B,KAAK,KAAK,SAAS,IAAI,CAACH,OAAO,CAACG,KAAK,CAAC,GAAG,SAAS,GAAGH,OAAO,CAACG,KAAK,CAAC,CAACsB,IAAI;EAEzF,IAAIhB,QAAQ,KAAKN,KAAK,KAAK,SAAS,IAAI,CAACH,OAAO,CAACG,KAAK,CAAC,CAAC,EAAE;IACxD8B,UAAU,GAAG,SAAS;EACxB,CAAC,MAAM,IAAIxB,QAAQ,IAAIN,KAAK,KAAK,MAAM,EAAE8B,UAAU,GAAGrB,KAAK,CAACa,IAAI;EAEhE,OAAO;IACLlB,OAAO;IACPH,aAAa;IACbC,aAAa;IACb6B,cAAc,EAAE,MAAM;IACtB/B,KAAK,EAAE8B,UAAU;IACjB3B,UAAU,EAAEY,WAAW,CAACZ,UAAU,CAAC,IAAIY,WAAW,CAACZ,UAAU,CAAC;IAC9D,IAAIE,YAAY,IAAIe,cAAc,CAAC,CAAC;EACtC,CAAC;AACH,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}