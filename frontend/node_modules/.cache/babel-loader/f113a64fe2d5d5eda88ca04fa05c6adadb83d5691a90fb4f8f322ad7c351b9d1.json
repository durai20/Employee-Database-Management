{"ast":null,"code":"'use client';\n\nimport e, { isValidElement as t, useRef as n, useLayoutEffect as o, useEffect as s, cloneElement as a, useSyncExternalStore as r, useState as i } from \"react\";\nimport l from \"clsx\";\nconst c = e => \"number\" == typeof e && !isNaN(e),\n  d = e => \"string\" == typeof e,\n  u = e => \"function\" == typeof e,\n  p = e => d(e) || u(e) ? e : null,\n  m = e => t(e) || d(e) || u(e) || c(e);\nfunction f(e, t, n) {\n  void 0 === n && (n = 300);\n  const {\n    scrollHeight: o,\n    style: s\n  } = e;\n  requestAnimationFrame(() => {\n    s.minHeight = \"initial\", s.height = o + \"px\", s.transition = `all ${n}ms`, requestAnimationFrame(() => {\n      s.height = \"0\", s.padding = \"0\", s.margin = \"0\", setTimeout(t, n);\n    });\n  });\n}\nfunction g(t) {\n  let {\n    enter: a,\n    exit: r,\n    appendPosition: i = !1,\n    collapse: l = !0,\n    collapseDuration: c = 300\n  } = t;\n  return function (t) {\n    let {\n      children: d,\n      position: u,\n      preventExitTransition: p,\n      done: m,\n      nodeRef: g,\n      isIn: y,\n      playToast: v\n    } = t;\n    const h = i ? `${a}--${u}` : a,\n      T = i ? `${r}--${u}` : r,\n      E = n(0);\n    return o(() => {\n      const e = g.current,\n        t = h.split(\" \"),\n        n = o => {\n          o.target === g.current && (v(), e.removeEventListener(\"animationend\", n), e.removeEventListener(\"animationcancel\", n), 0 === E.current && \"animationcancel\" !== o.type && e.classList.remove(...t));\n        };\n      e.classList.add(...t), e.addEventListener(\"animationend\", n), e.addEventListener(\"animationcancel\", n);\n    }, []), s(() => {\n      const e = g.current,\n        t = () => {\n          e.removeEventListener(\"animationend\", t), l ? f(e, m, c) : m();\n        };\n      y || (p ? t() : (E.current = 1, e.className += ` ${T}`, e.addEventListener(\"animationend\", t)));\n    }, [y]), e.createElement(e.Fragment, null, d);\n  };\n}\nfunction y(e, t) {\n  return null != e ? {\n    content: e.content,\n    containerId: e.props.containerId,\n    id: e.props.toastId,\n    theme: e.props.theme,\n    type: e.props.type,\n    data: e.props.data || {},\n    isLoading: e.props.isLoading,\n    icon: e.props.icon,\n    status: t\n  } : {};\n}\nconst v = new Map();\nlet h = [];\nconst T = new Set(),\n  E = e => T.forEach(t => t(e)),\n  b = () => v.size > 0;\nfunction I(e, t) {\n  var n;\n  if (t) return !(null == (n = v.get(t)) || !n.isToastActive(e));\n  let o = !1;\n  return v.forEach(t => {\n    t.isToastActive(e) && (o = !0);\n  }), o;\n}\nfunction _(e, t) {\n  m(e) && (b() || h.push({\n    content: e,\n    options: t\n  }), v.forEach(n => {\n    n.buildToast(e, t);\n  }));\n}\nfunction C(e, t) {\n  v.forEach(n => {\n    null != t && null != t && t.containerId ? (null == t ? void 0 : t.containerId) === n.id && n.toggle(e, null == t ? void 0 : t.id) : n.toggle(e, null == t ? void 0 : t.id);\n  });\n}\nfunction L(e) {\n  const {\n    subscribe: o,\n    getSnapshot: s,\n    setProps: i\n  } = n(function (e) {\n    const n = e.containerId || 1;\n    return {\n      subscribe(o) {\n        const s = function (e, n, o) {\n          let s = 1,\n            r = 0,\n            i = [],\n            l = [],\n            f = [],\n            g = n;\n          const v = new Map(),\n            h = new Set(),\n            T = () => {\n              f = Array.from(v.values()), h.forEach(e => e());\n            },\n            E = e => {\n              l = null == e ? [] : l.filter(t => t !== e), T();\n            },\n            b = e => {\n              const {\n                  toastId: n,\n                  onOpen: s,\n                  updateId: a,\n                  children: r\n                } = e.props,\n                i = null == a;\n              e.staleId && v.delete(e.staleId), v.set(n, e), l = [...l, e.props.toastId].filter(t => t !== e.staleId), T(), o(y(e, i ? \"added\" : \"updated\")), i && u(s) && s(t(r) && r.props);\n            };\n          return {\n            id: e,\n            props: g,\n            observe: e => (h.add(e), () => h.delete(e)),\n            toggle: (e, t) => {\n              v.forEach(n => {\n                null != t && t !== n.props.toastId || u(n.toggle) && n.toggle(e);\n              });\n            },\n            removeToast: E,\n            toasts: v,\n            clearQueue: () => {\n              r -= i.length, i = [];\n            },\n            buildToast: (n, l) => {\n              if ((t => {\n                let {\n                  containerId: n,\n                  toastId: o,\n                  updateId: s\n                } = t;\n                const a = n ? n !== e : 1 !== e,\n                  r = v.has(o) && null == s;\n                return a || r;\n              })(l)) return;\n              const {\n                  toastId: f,\n                  updateId: h,\n                  data: I,\n                  staleId: _,\n                  delay: C\n                } = l,\n                L = () => {\n                  E(f);\n                },\n                N = null == h;\n              N && r++;\n              const $ = {\n                ...g,\n                style: g.toastStyle,\n                key: s++,\n                ...Object.fromEntries(Object.entries(l).filter(e => {\n                  let [t, n] = e;\n                  return null != n;\n                })),\n                toastId: f,\n                updateId: h,\n                data: I,\n                closeToast: L,\n                isIn: !1,\n                className: p(l.className || g.toastClassName),\n                bodyClassName: p(l.bodyClassName || g.bodyClassName),\n                progressClassName: p(l.progressClassName || g.progressClassName),\n                autoClose: !l.isLoading && (w = l.autoClose, k = g.autoClose, !1 === w || c(w) && w > 0 ? w : k),\n                deleteToast() {\n                  const e = v.get(f),\n                    {\n                      onClose: n,\n                      children: s\n                    } = e.props;\n                  u(n) && n(t(s) && s.props), o(y(e, \"removed\")), v.delete(f), r--, r < 0 && (r = 0), i.length > 0 ? b(i.shift()) : T();\n                }\n              };\n              var w, k;\n              $.closeButton = g.closeButton, !1 === l.closeButton || m(l.closeButton) ? $.closeButton = l.closeButton : !0 === l.closeButton && ($.closeButton = !m(g.closeButton) || g.closeButton);\n              let P = n;\n              t(n) && !d(n.type) ? P = a(n, {\n                closeToast: L,\n                toastProps: $,\n                data: I\n              }) : u(n) && (P = n({\n                closeToast: L,\n                toastProps: $,\n                data: I\n              }));\n              const M = {\n                content: P,\n                props: $,\n                staleId: _\n              };\n              g.limit && g.limit > 0 && r > g.limit && N ? i.push(M) : c(C) ? setTimeout(() => {\n                b(M);\n              }, C) : b(M);\n            },\n            setProps(e) {\n              g = e;\n            },\n            setToggle: (e, t) => {\n              v.get(e).toggle = t;\n            },\n            isToastActive: e => l.some(t => t === e),\n            getSnapshot: () => g.newestOnTop ? f.reverse() : f\n          };\n        }(n, e, E);\n        v.set(n, s);\n        const r = s.observe(o);\n        return h.forEach(e => _(e.content, e.options)), h = [], () => {\n          r(), v.delete(n);\n        };\n      },\n      setProps(e) {\n        var t;\n        null == (t = v.get(n)) || t.setProps(e);\n      },\n      getSnapshot() {\n        var e;\n        return null == (e = v.get(n)) ? void 0 : e.getSnapshot();\n      }\n    };\n  }(e)).current;\n  i(e);\n  const l = r(o, s, s);\n  return {\n    getToastToRender: function (e) {\n      if (!l) return [];\n      const t = new Map();\n      return l.forEach(e => {\n        const {\n          position: n\n        } = e.props;\n        t.has(n) || t.set(n, []), t.get(n).push(e);\n      }), Array.from(t, t => e(t[0], t[1]));\n    },\n    isToastActive: I,\n    count: null == l ? void 0 : l.length\n  };\n}\nfunction N(e) {\n  const [t, o] = i(!1),\n    [a, r] = i(!1),\n    l = n(null),\n    c = n({\n      start: 0,\n      delta: 0,\n      removalDistance: 0,\n      canCloseOnClick: !0,\n      canDrag: !1,\n      didMove: !1\n    }).current,\n    {\n      autoClose: d,\n      pauseOnHover: u,\n      closeToast: p,\n      onClick: m,\n      closeOnClick: f\n    } = e;\n  var g, y;\n  function h() {\n    o(!0);\n  }\n  function T() {\n    o(!1);\n  }\n  function E(n) {\n    const o = l.current;\n    c.canDrag && o && (c.didMove = !0, t && T(), c.delta = \"x\" === e.draggableDirection ? n.clientX - c.start : n.clientY - c.start, c.start !== n.clientX && (c.canCloseOnClick = !1), o.style.transform = `translate3d(${\"x\" === e.draggableDirection ? `${c.delta}px, var(--y)` : `0, calc(${c.delta}px + var(--y))`},0)`, o.style.opacity = \"\" + (1 - Math.abs(c.delta / c.removalDistance)));\n  }\n  function b() {\n    document.removeEventListener(\"pointermove\", E), document.removeEventListener(\"pointerup\", b);\n    const t = l.current;\n    if (c.canDrag && c.didMove && t) {\n      if (c.canDrag = !1, Math.abs(c.delta) > c.removalDistance) return r(!0), e.closeToast(), void e.collapseAll();\n      t.style.transition = \"transform 0.2s, opacity 0.2s\", t.style.removeProperty(\"transform\"), t.style.removeProperty(\"opacity\");\n    }\n  }\n  null == (y = v.get((g = {\n    id: e.toastId,\n    containerId: e.containerId,\n    fn: o\n  }).containerId || 1)) || y.setToggle(g.id, g.fn), s(() => {\n    if (e.pauseOnFocusLoss) return document.hasFocus() || T(), window.addEventListener(\"focus\", h), window.addEventListener(\"blur\", T), () => {\n      window.removeEventListener(\"focus\", h), window.removeEventListener(\"blur\", T);\n    };\n  }, [e.pauseOnFocusLoss]);\n  const I = {\n    onPointerDown: function (t) {\n      if (!0 === e.draggable || e.draggable === t.pointerType) {\n        c.didMove = !1, document.addEventListener(\"pointermove\", E), document.addEventListener(\"pointerup\", b);\n        const n = l.current;\n        c.canCloseOnClick = !0, c.canDrag = !0, n.style.transition = \"none\", \"x\" === e.draggableDirection ? (c.start = t.clientX, c.removalDistance = n.offsetWidth * (e.draggablePercent / 100)) : (c.start = t.clientY, c.removalDistance = n.offsetHeight * (80 === e.draggablePercent ? 1.5 * e.draggablePercent : e.draggablePercent) / 100);\n      }\n    },\n    onPointerUp: function (t) {\n      const {\n        top: n,\n        bottom: o,\n        left: s,\n        right: a\n      } = l.current.getBoundingClientRect();\n      \"touchend\" !== t.nativeEvent.type && e.pauseOnHover && t.clientX >= s && t.clientX <= a && t.clientY >= n && t.clientY <= o ? T() : h();\n    }\n  };\n  return d && u && (I.onMouseEnter = T, e.stacked || (I.onMouseLeave = h)), f && (I.onClick = e => {\n    m && m(e), c.canCloseOnClick && p();\n  }), {\n    playToast: h,\n    pauseToast: T,\n    isRunning: t,\n    preventExitTransition: a,\n    toastRef: l,\n    eventHandlers: I\n  };\n}\nfunction $(t) {\n  let {\n    delay: n,\n    isRunning: o,\n    closeToast: s,\n    type: a = \"default\",\n    hide: r,\n    className: i,\n    style: c,\n    controlledProgress: d,\n    progress: p,\n    rtl: m,\n    isIn: f,\n    theme: g\n  } = t;\n  const y = r || d && 0 === p,\n    v = {\n      ...c,\n      animationDuration: `${n}ms`,\n      animationPlayState: o ? \"running\" : \"paused\"\n    };\n  d && (v.transform = `scaleX(${p})`);\n  const h = l(\"Toastify__progress-bar\", d ? \"Toastify__progress-bar--controlled\" : \"Toastify__progress-bar--animated\", `Toastify__progress-bar-theme--${g}`, `Toastify__progress-bar--${a}`, {\n      \"Toastify__progress-bar--rtl\": m\n    }),\n    T = u(i) ? i({\n      rtl: m,\n      type: a,\n      defaultClassName: h\n    }) : l(h, i),\n    E = {\n      [d && p >= 1 ? \"onTransitionEnd\" : \"onAnimationEnd\"]: d && p < 1 ? null : () => {\n        f && s();\n      }\n    };\n  return e.createElement(\"div\", {\n    className: \"Toastify__progress-bar--wrp\",\n    \"data-hidden\": y\n  }, e.createElement(\"div\", {\n    className: `Toastify__progress-bar--bg Toastify__progress-bar-theme--${g} Toastify__progress-bar--${a}`\n  }), e.createElement(\"div\", {\n    role: \"progressbar\",\n    \"aria-hidden\": y ? \"true\" : \"false\",\n    \"aria-label\": \"notification timer\",\n    className: T,\n    style: v,\n    ...E\n  }));\n}\nlet w = 1;\nconst k = () => \"\" + w++;\nfunction P(e) {\n  return e && (d(e.toastId) || c(e.toastId)) ? e.toastId : k();\n}\nfunction M(e, t) {\n  return _(e, t), t.toastId;\n}\nfunction x(e, t) {\n  return {\n    ...t,\n    type: t && t.type || e,\n    toastId: P(t)\n  };\n}\nfunction A(e) {\n  return (t, n) => M(t, x(e, n));\n}\nfunction B(e, t) {\n  return M(e, x(\"default\", t));\n}\nB.loading = (e, t) => M(e, x(\"default\", {\n  isLoading: !0,\n  autoClose: !1,\n  closeOnClick: !1,\n  closeButton: !1,\n  draggable: !1,\n  ...t\n})), B.promise = function (e, t, n) {\n  let o,\n    {\n      pending: s,\n      error: a,\n      success: r\n    } = t;\n  s && (o = d(s) ? B.loading(s, n) : B.loading(s.render, {\n    ...n,\n    ...s\n  }));\n  const i = {\n      isLoading: null,\n      autoClose: null,\n      closeOnClick: null,\n      closeButton: null,\n      draggable: null\n    },\n    l = (e, t, s) => {\n      if (null == t) return void B.dismiss(o);\n      const a = {\n          type: e,\n          ...i,\n          ...n,\n          data: s\n        },\n        r = d(t) ? {\n          render: t\n        } : t;\n      return o ? B.update(o, {\n        ...a,\n        ...r\n      }) : B(r.render, {\n        ...a,\n        ...r\n      }), s;\n    },\n    c = u(e) ? e() : e;\n  return c.then(e => l(\"success\", r, e)).catch(e => l(\"error\", a, e)), c;\n}, B.success = A(\"success\"), B.info = A(\"info\"), B.error = A(\"error\"), B.warning = A(\"warning\"), B.warn = B.warning, B.dark = (e, t) => M(e, x(\"default\", {\n  theme: \"dark\",\n  ...t\n})), B.dismiss = function (e) {\n  !function (e) {\n    var t;\n    if (b()) {\n      if (null == e || d(t = e) || c(t)) v.forEach(t => {\n        t.removeToast(e);\n      });else if (e && (\"containerId\" in e || \"id\" in e)) {\n        var n;\n        (null == (n = v.get(e.containerId)) ? void 0 : n.removeToast(e.id)) || v.forEach(t => {\n          t.removeToast(e.id);\n        });\n      }\n    } else h = h.filter(t => null != e && t.options.toastId !== e);\n  }(e);\n}, B.clearWaitingQueue = function (e) {\n  void 0 === e && (e = {}), v.forEach(t => {\n    !t.props.limit || e.containerId && t.id !== e.containerId || t.clearQueue();\n  });\n}, B.isActive = I, B.update = function (e, t) {\n  void 0 === t && (t = {});\n  const n = ((e, t) => {\n    var n;\n    let {\n      containerId: o\n    } = t;\n    return null == (n = v.get(o || 1)) ? void 0 : n.toasts.get(e);\n  })(e, t);\n  if (n) {\n    const {\n        props: o,\n        content: s\n      } = n,\n      a = {\n        delay: 100,\n        ...o,\n        ...t,\n        toastId: t.toastId || e,\n        updateId: k()\n      };\n    a.toastId !== e && (a.staleId = e);\n    const r = a.render || s;\n    delete a.render, M(r, a);\n  }\n}, B.done = e => {\n  B.update(e, {\n    progress: 1\n  });\n}, B.onChange = function (e) {\n  return T.add(e), () => {\n    T.delete(e);\n  };\n}, B.play = e => C(!0, e), B.pause = e => C(!1, e);\nconst O = \"undefined\" != typeof window ? o : s,\n  D = t => {\n    let {\n      theme: n,\n      type: o,\n      isLoading: s,\n      ...a\n    } = t;\n    return e.createElement(\"svg\", {\n      viewBox: \"0 0 24 24\",\n      width: \"100%\",\n      height: \"100%\",\n      fill: \"colored\" === n ? \"currentColor\" : `var(--toastify-icon-color-${o})`,\n      ...a\n    });\n  },\n  z = {\n    info: function (t) {\n      return e.createElement(D, {\n        ...t\n      }, e.createElement(\"path\", {\n        d: \"M12 0a12 12 0 1012 12A12.013 12.013 0 0012 0zm.25 5a1.5 1.5 0 11-1.5 1.5 1.5 1.5 0 011.5-1.5zm2.25 13.5h-4a1 1 0 010-2h.75a.25.25 0 00.25-.25v-4.5a.25.25 0 00-.25-.25h-.75a1 1 0 010-2h1a2 2 0 012 2v4.75a.25.25 0 00.25.25h.75a1 1 0 110 2z\"\n      }));\n    },\n    warning: function (t) {\n      return e.createElement(D, {\n        ...t\n      }, e.createElement(\"path\", {\n        d: \"M23.32 17.191L15.438 2.184C14.728.833 13.416 0 11.996 0c-1.42 0-2.733.833-3.443 2.184L.533 17.448a4.744 4.744 0 000 4.368C1.243 23.167 2.555 24 3.975 24h16.05C22.22 24 24 22.044 24 19.632c0-.904-.251-1.746-.68-2.44zm-9.622 1.46c0 1.033-.724 1.823-1.698 1.823s-1.698-.79-1.698-1.822v-.043c0-1.028.724-1.822 1.698-1.822s1.698.79 1.698 1.822v.043zm.039-12.285l-.84 8.06c-.057.581-.408.943-.897.943-.49 0-.84-.367-.896-.942l-.84-8.065c-.057-.624.25-1.095.779-1.095h1.91c.528.005.84.476.784 1.1z\"\n      }));\n    },\n    success: function (t) {\n      return e.createElement(D, {\n        ...t\n      }, e.createElement(\"path\", {\n        d: \"M12 0a12 12 0 1012 12A12.014 12.014 0 0012 0zm6.927 8.2l-6.845 9.289a1.011 1.011 0 01-1.43.188l-4.888-3.908a1 1 0 111.25-1.562l4.076 3.261 6.227-8.451a1 1 0 111.61 1.183z\"\n      }));\n    },\n    error: function (t) {\n      return e.createElement(D, {\n        ...t\n      }, e.createElement(\"path\", {\n        d: \"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\"\n      }));\n    },\n    spinner: function () {\n      return e.createElement(\"div\", {\n        className: \"Toastify__spinner\"\n      });\n    }\n  },\n  R = n => {\n    const {\n        isRunning: o,\n        preventExitTransition: s,\n        toastRef: r,\n        eventHandlers: i,\n        playToast: c\n      } = N(n),\n      {\n        closeButton: d,\n        children: p,\n        autoClose: m,\n        onClick: f,\n        type: g,\n        hideProgressBar: y,\n        closeToast: v,\n        transition: h,\n        position: T,\n        className: E,\n        style: b,\n        bodyClassName: I,\n        bodyStyle: _,\n        progressClassName: C,\n        progressStyle: L,\n        updateId: w,\n        role: k,\n        progress: P,\n        rtl: M,\n        toastId: x,\n        deleteToast: A,\n        isIn: B,\n        isLoading: O,\n        closeOnClick: D,\n        theme: R\n      } = n,\n      S = l(\"Toastify__toast\", `Toastify__toast-theme--${R}`, `Toastify__toast--${g}`, {\n        \"Toastify__toast--rtl\": M\n      }, {\n        \"Toastify__toast--close-on-click\": D\n      }),\n      H = u(E) ? E({\n        rtl: M,\n        position: T,\n        type: g,\n        defaultClassName: S\n      }) : l(S, E),\n      F = function (e) {\n        let {\n            theme: n,\n            type: o,\n            isLoading: s,\n            icon: r\n          } = e,\n          i = null;\n        const l = {\n          theme: n,\n          type: o\n        };\n        return !1 === r || (u(r) ? i = r({\n          ...l,\n          isLoading: s\n        }) : t(r) ? i = a(r, l) : s ? i = z.spinner() : (e => e in z)(o) && (i = z[o](l))), i;\n      }(n),\n      X = !!P || !m,\n      Y = {\n        closeToast: v,\n        type: g,\n        theme: R\n      };\n    let q = null;\n    return !1 === d || (q = u(d) ? d(Y) : t(d) ? a(d, Y) : function (t) {\n      let {\n        closeToast: n,\n        theme: o,\n        ariaLabel: s = \"close\"\n      } = t;\n      return e.createElement(\"button\", {\n        className: `Toastify__close-button Toastify__close-button--${o}`,\n        type: \"button\",\n        onClick: e => {\n          e.stopPropagation(), n(e);\n        },\n        \"aria-label\": s\n      }, e.createElement(\"svg\", {\n        \"aria-hidden\": \"true\",\n        viewBox: \"0 0 14 16\"\n      }, e.createElement(\"path\", {\n        fillRule: \"evenodd\",\n        d: \"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"\n      })));\n    }(Y)), e.createElement(h, {\n      isIn: B,\n      done: A,\n      position: T,\n      preventExitTransition: s,\n      nodeRef: r,\n      playToast: c\n    }, e.createElement(\"div\", {\n      id: x,\n      onClick: f,\n      \"data-in\": B,\n      className: H,\n      ...i,\n      style: b,\n      ref: r\n    }, e.createElement(\"div\", {\n      ...(B && {\n        role: k\n      }),\n      className: u(I) ? I({\n        type: g\n      }) : l(\"Toastify__toast-body\", I),\n      style: _\n    }, null != F && e.createElement(\"div\", {\n      className: l(\"Toastify__toast-icon\", {\n        \"Toastify--animate-icon Toastify__zoom-enter\": !O\n      })\n    }, F), e.createElement(\"div\", null, p)), q, e.createElement($, {\n      ...(w && !X ? {\n        key: `pb-${w}`\n      } : {}),\n      rtl: M,\n      theme: R,\n      delay: m,\n      isRunning: o,\n      isIn: B,\n      closeToast: v,\n      hide: y,\n      type: g,\n      style: L,\n      className: C,\n      controlledProgress: X,\n      progress: P || 0\n    })));\n  },\n  S = function (e, t) {\n    return void 0 === t && (t = !1), {\n      enter: `Toastify--animate Toastify__${e}-enter`,\n      exit: `Toastify--animate Toastify__${e}-exit`,\n      appendPosition: t\n    };\n  },\n  H = g(S(\"bounce\", !0)),\n  F = g(S(\"slide\", !0)),\n  X = g(S(\"zoom\")),\n  Y = g(S(\"flip\")),\n  q = {\n    position: \"top-right\",\n    transition: H,\n    autoClose: 5e3,\n    closeButton: !0,\n    pauseOnHover: !0,\n    pauseOnFocusLoss: !0,\n    draggable: \"touch\",\n    draggablePercent: 80,\n    draggableDirection: \"x\",\n    role: \"alert\",\n    theme: \"light\"\n  };\nfunction Q(t) {\n  let o = {\n    ...q,\n    ...t\n  };\n  const s = t.stacked,\n    [a, r] = i(!0),\n    c = n(null),\n    {\n      getToastToRender: d,\n      isToastActive: m,\n      count: f\n    } = L(o),\n    {\n      className: g,\n      style: y,\n      rtl: v,\n      containerId: h\n    } = o;\n  function T(e) {\n    const t = l(\"Toastify__toast-container\", `Toastify__toast-container--${e}`, {\n      \"Toastify__toast-container--rtl\": v\n    });\n    return u(g) ? g({\n      position: e,\n      rtl: v,\n      defaultClassName: t\n    }) : l(t, p(g));\n  }\n  function E() {\n    s && (r(!0), B.play());\n  }\n  return O(() => {\n    if (s) {\n      var e;\n      const t = c.current.querySelectorAll('[data-in=\"true\"]'),\n        n = 12,\n        s = null == (e = o.position) ? void 0 : e.includes(\"top\");\n      let r = 0,\n        i = 0;\n      Array.from(t).reverse().forEach((e, t) => {\n        const o = e;\n        o.classList.add(\"Toastify__toast--stacked\"), t > 0 && (o.dataset.collapsed = `${a}`), o.dataset.pos || (o.dataset.pos = s ? \"top\" : \"bot\");\n        const l = r * (a ? .2 : 1) + (a ? 0 : n * t);\n        o.style.setProperty(\"--y\", `${s ? l : -1 * l}px`), o.style.setProperty(\"--g\", `${n}`), o.style.setProperty(\"--s\", \"\" + (1 - (a ? i : 0))), r += o.offsetHeight, i += .025;\n      });\n    }\n  }, [a, f, s]), e.createElement(\"div\", {\n    ref: c,\n    className: \"Toastify\",\n    id: h,\n    onMouseEnter: () => {\n      s && (r(!1), B.pause());\n    },\n    onMouseLeave: E\n  }, d((t, n) => {\n    const o = n.length ? {\n      ...y\n    } : {\n      ...y,\n      pointerEvents: \"none\"\n    };\n    return e.createElement(\"div\", {\n      className: T(t),\n      style: o,\n      key: `container-${t}`\n    }, n.map(t => {\n      let {\n        content: n,\n        props: o\n      } = t;\n      return e.createElement(R, {\n        ...o,\n        stacked: s,\n        collapseAll: E,\n        isIn: m(o.toastId, o.containerId),\n        style: o.style,\n        key: `toast-${o.key}`\n      }, n);\n    }));\n  }));\n}\nexport { H as Bounce, Y as Flip, z as Icons, F as Slide, Q as ToastContainer, X as Zoom, f as collapseToast, g as cssTransition, B as toast, N as useToast, L as useToastContainer };\n//# sourceMappingURL=react-toastify.esm.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}