{"ast":null,"code":"import cssjanus from 'cssjanus';\nimport { COMMENT, compile, DECLARATION, IMPORT, RULESET, serialize, strlen, KEYFRAMES, MEDIA, SUPPORTS } from 'stylis';\nfunction stringifyPreserveComments(element, index, children) {\n  switch (element.type) {\n    case IMPORT:\n    case DECLARATION:\n    case COMMENT:\n      return element.return = element.return || element.value;\n    case RULESET:\n      {\n        element.value = Array.isArray(element.props) ? element.props.join(',') : element.props;\n        if (Array.isArray(element.children)) {\n          element.children.forEach(function (x) {\n            if (x.type === COMMENT) x.children = x.value;\n          });\n        }\n      }\n  }\n  var serializedChildren = serialize(Array.prototype.concat(element.children), stringifyPreserveComments);\n  return strlen(serializedChildren) ? element.return = element.value + '{' + serializedChildren + '}' : '';\n}\nfunction stylisRTLPlugin(element, index, children, callback) {\n  if (element.type === KEYFRAMES || element.type === SUPPORTS || element.type === RULESET && (!element.parent || element.parent.type === MEDIA || element.parent.type === RULESET)) {\n    var stringified = cssjanus.transform(stringifyPreserveComments(element, index, children));\n    element.children = stringified ? compile(stringified)[0].children : [];\n    element.return = '';\n  }\n}\n// stable identifier that will not be dropped by minification unless the whole module\n// is unused\nObject.defineProperty(stylisRTLPlugin, 'name', {\n  value: 'stylisRTLPlugin'\n});\nexport default stylisRTLPlugin;\n//# sourceMappingURL=stylis-rtl.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}