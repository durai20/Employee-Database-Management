{"ast":null,"code":"var _jsxFileName = \"/home/durai/Documents/projects/TestPlatform/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useMemo } from \"react\";\nimport { Routes, Route, Navigate, useLocation } from \"react-router-dom\";\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport theme from \"assets/theme\";\nimport brandWhite from \"assets/images/logo-ct.png\";\nimport brandDark from \"assets/images/logo-ct-dark.png\";\nimport { SessionProvider, useSession } from \"./SessionContext.jsx\";\nimport Sidenav from \"examples/Sidenav\";\nimport Configurator from \"examples/Configurator\";\nimport routes from \"routes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [controller] = useMaterialUIController();\n  const {\n    miniSidenav,\n    direction,\n    layout,\n    openConfigurator,\n    sidenavColor,\n    transparentSidenav,\n    whiteSidenav,\n    darkMode\n  } = controller;\n  const [onMouseEnter, setOnMouseEnter] = useState(false);\n  const {\n    pathname\n  } = useLocation();\n  const {\n    name\n  } = useSession(); // Assuming you store user role in the session\n\n  // Open sidenav when mouse enters mini sidenav\n  const handleOnMouseEnter = () => {\n    if (miniSidenav && !onMouseEnter) {\n      setMiniSidenav(dispatch, false);\n      setOnMouseEnter(true);\n    }\n  };\n\n  // Close sidenav when mouse leaves mini sidenav\n  const handleOnMouseLeave = () => {\n    if (onMouseEnter) {\n      setMiniSidenav(dispatch, true);\n      setOnMouseEnter(false);\n    }\n  };\n\n  // Change the openConfigurator state\n  const handleConfiguratorOpen = () => setOpenConfigurator(dispatch, !openConfigurator);\n\n  // Set dir attribute for the body element\n  useEffect(() => {\n    document.body.setAttribute(\"dir\", direction);\n  }, [direction]);\n\n  // Scroll to top when route changes\n  useEffect(() => {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n  }, [pathname]);\n  const getFilteredRoutes = (allRoutes, userRole) => allRoutes.filter(route => !route.role || route.role === userRole);\n  const renderRoutes = filteredRoutes => filteredRoutes.map(route => {\n    if (route.route) {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: route.route,\n        element: route.component\n      }, route.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 16\n      }, this);\n    }\n    return null;\n  });\n  const configsButton = /*#__PURE__*/_jsxDEV(MDBox, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"3.25rem\",\n    height: \"3.25rem\",\n    bgColor: \"white\",\n    shadow: \"sm\",\n    borderRadius: \"50%\",\n    position: \"fixed\",\n    right: \"2rem\",\n    bottom: \"2rem\",\n    zIndex: 99,\n    color: \"dark\",\n    sx: {\n      cursor: \"pointer\"\n    },\n    onClick: handleConfiguratorOpen\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(SessionProvider, {\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: darkMode ? themeDark : theme,\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), layout === \"dashboard\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Sidenav, {\n          color: sidenavColor,\n          brand: transparentSidenav && !darkMode || whiteSidenav ? brandDark : brandWhite,\n          brandName: \"Admin Dashboard\",\n          routes: getFilteredRoutes(routes, name),\n          onMouseEnter: handleOnMouseEnter,\n          onMouseLeave: handleOnMouseLeave\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Configurator, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), configsButton]\n      }, void 0, true), layout === \"vr\" && /*#__PURE__*/_jsxDEV(Configurator, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [renderRoutes(getFilteredRoutes(routes, name)), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/sign-in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Jag6WImS0NnQDd7LyiMylz4K7gc=\", true, function () {\n  return [useLocation, useSession];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useMemo","Routes","Route","Navigate","useLocation","ThemeProvider","CssBaseline","theme","brandWhite","brandDark","SessionProvider","useSession","Sidenav","Configurator","routes","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","controller","useMaterialUIController","miniSidenav","direction","layout","openConfigurator","sidenavColor","transparentSidenav","whiteSidenav","darkMode","onMouseEnter","setOnMouseEnter","pathname","name","handleOnMouseEnter","setMiniSidenav","dispatch","handleOnMouseLeave","handleConfiguratorOpen","setOpenConfigurator","document","body","setAttribute","documentElement","scrollTop","scrollingElement","getFilteredRoutes","allRoutes","userRole","filter","route","role","renderRoutes","filteredRoutes","map","exact","path","element","component","key","fileName","_jsxFileName","lineNumber","columnNumber","configsButton","MDBox","display","justifyContent","alignItems","width","height","bgColor","shadow","borderRadius","position","right","bottom","zIndex","color","sx","cursor","onClick","children","themeDark","brand","brandName","onMouseLeave","to","_c","$RefreshReg$"],"sources":["/home/durai/Documents/projects/TestPlatform/frontend/src/App.js"],"sourcesContent":["import { useState, useEffect, useMemo } from \"react\";\nimport { Routes, Route, Navigate, useLocation } from \"react-router-dom\";\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport theme from \"assets/theme\";\nimport brandWhite from \"assets/images/logo-ct.png\";\nimport brandDark from \"assets/images/logo-ct-dark.png\";\nimport { SessionProvider, useSession } from \"./SessionContext.jsx\";\nimport Sidenav from \"examples/Sidenav\";\nimport Configurator from \"examples/Configurator\";\nimport routes from \"routes\";\n\nexport default function App() {\n  const [controller] = useMaterialUIController();\n  const { miniSidenav, direction, layout, openConfigurator, sidenavColor, transparentSidenav, whiteSidenav, darkMode } = controller;\n  const [onMouseEnter, setOnMouseEnter] = useState(false);\n  const { pathname } = useLocation();\n  const { name } = useSession(); // Assuming you store user role in the session\n\n  // Open sidenav when mouse enters mini sidenav\n  const handleOnMouseEnter = () => {\n    if (miniSidenav && !onMouseEnter) {\n      setMiniSidenav(dispatch, false);\n      setOnMouseEnter(true);\n    }\n  };\n\n  // Close sidenav when mouse leaves mini sidenav\n  const handleOnMouseLeave = () => {\n    if (onMouseEnter) {\n      setMiniSidenav(dispatch, true);\n      setOnMouseEnter(false);\n    }\n  };\n\n  // Change the openConfigurator state\n  const handleConfiguratorOpen = () => setOpenConfigurator(dispatch, !openConfigurator);\n\n  // Set dir attribute for the body element\n  useEffect(() => {\n    document.body.setAttribute(\"dir\", direction);\n  }, [direction]);\n\n  // Scroll to top when route changes\n  useEffect(() => {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n  }, [pathname]);\n\n  const getFilteredRoutes = (allRoutes, userRole) =>\n    allRoutes.filter(route => !route.role || route.role === userRole);\n\n  const renderRoutes = (filteredRoutes) =>\n    filteredRoutes.map(route => {\n      if (route.route) {\n        return <Route exact path={route.route} element={route.component} key={route.key} />;\n      }\n      return null;\n    });\n\n  const configsButton = (\n    <MDBox\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      width=\"3.25rem\"\n      height=\"3.25rem\"\n      bgColor=\"white\"\n      shadow=\"sm\"\n      borderRadius=\"50%\"\n      position=\"fixed\"\n      right=\"2rem\"\n      bottom=\"2rem\"\n      zIndex={99}\n      color=\"dark\"\n      sx={{ cursor: \"pointer\" }}\n      onClick={handleConfiguratorOpen}\n    >\n      \n    </MDBox>\n  );\n\n  return (\n    <SessionProvider>\n      <ThemeProvider theme={darkMode ? themeDark : theme}>\n        <CssBaseline />\n        {layout === \"dashboard\" && (\n          <>\n            <Sidenav\n              color={sidenavColor}\n              brand={(transparentSidenav && !darkMode) || whiteSidenav ? brandDark : brandWhite}\n              brandName=\"Admin Dashboard\"\n              routes={getFilteredRoutes(routes, name)}\n              onMouseEnter={handleOnMouseEnter}\n              onMouseLeave={handleOnMouseLeave}\n            />\n            <Configurator />\n            {configsButton}\n          </>\n        )}\n        {layout === \"vr\" && <Configurator />}\n        <Routes>\n          {renderRoutes(getFilteredRoutes(routes, name))}\n          <Route path=\"*\" element={<Navigate to=\"/sign-in\" />} />\n        </Routes>\n      </ThemeProvider>\n    </SessionProvider>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}