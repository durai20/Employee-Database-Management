{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { unstable_createCssVarsProvider as createCssVarsProvider, unstable_styleFunctionSx as styleFunctionSx } from '@mui/system';\nimport experimental_extendTheme from './experimental_extendTheme';\nimport createTypography from './createTypography';\nimport excludeVariablesFromRoot from './excludeVariablesFromRoot';\nimport THEME_ID from './identifier';\nconst defaultTheme = experimental_extendTheme();\nconst {\n  CssVarsProvider,\n  useColorScheme,\n  getInitColorSchemeScript\n} = createCssVarsProvider({\n  themeId: THEME_ID,\n  theme: defaultTheme,\n  attribute: 'data-mui-color-scheme',\n  modeStorageKey: 'mui-mode',\n  colorSchemeStorageKey: 'mui-color-scheme',\n  defaultColorScheme: {\n    light: 'light',\n    dark: 'dark'\n  },\n  resolveTheme: theme => {\n    const newTheme = _extends({}, theme, {\n      typography: createTypography(theme.palette, theme.typography)\n    });\n    newTheme.unstable_sx = function sx(props) {\n      return styleFunctionSx({\n        sx: props,\n        theme: this\n      });\n    };\n    return newTheme;\n  },\n  excludeVariablesFromRoot\n});\nexport { useColorScheme, getInitColorSchemeScript, CssVarsProvider as Experimental_CssVarsProvider };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}